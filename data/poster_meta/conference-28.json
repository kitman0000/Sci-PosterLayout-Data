{"poster_size": 5603904, "doclen": 137, "figlen": 2560585, "section": {"1": {"xy": [1043, 44, 1203, 84], "panel_size": 101052, "panel_aspectRatio": 14.321428571428571, "category": "Title", "figures": 0, "textlen": 0, "fig_size": 0, "title": "Netural Nearest Neighbors Network", "textRatio": 0.0, "figRatio": 0.0}, "3": {"xy": [34, 242, 890, 265], "panel_size": 235850, "panel_aspectRatio": 3.358490566037736, "category": "Introduction", "figures": 0, "textlen": 0, "fig_size": 0, "title": "Motivation\nK-nearest neighbors (KNN) selection is building block for many methods,eg.non-local image restoration algorithms[1, 3]However: KNN selection is not differentiable\u00b7This prevents learning the feature space for matching\nWe propose a deterministic and differentiable relaxation to KNN andleverage it in a novel non-local processing layer (N3 block).", "textRatio": 0.0, "figRatio": 0.0}, "4": {"xy": [23, 526, 903, 1126], "panel_size": 1016778, "panel_aspectRatio": 0.8019538188277087, "category": "Method", "figures": 6, "textlen": 0, "fig_size": 781809, "title": "1. Continuous Nearest Neighbors\ndifferentiable, deterministic relaxation of KNN selection\n", "7": {"fig_size": 159636, "fig_aspectRatio": 2.5338645418326693, "fig_size_poster": 0.7043189368770764}, "8": {"fig_size": 50882, "fig_aspectRatio": 0.8340080971659919, "fig_size_poster": 0.22812846068660023}, "9": {"fig_size": 244055, "fig_aspectRatio": 1.8119891008174387, "fig_size_poster": 0.7364341085271318}, "12": {"fig_size": 51156, "fig_aspectRatio": 0.7509578544061303, "fig_size_poster": 0.21705426356589147}, "13": {"fig_size": 231495, "fig_aspectRatio": 1.944927536231884, "fig_size_poster": 0.743078626799557}, "14": {"fig_size": 44585, "fig_aspectRatio": 0.7676348547717843, "fig_size_poster": 0.20487264673311184}, "textRatio": 0.0, "figRatio": 0.3053243692359363}, "15": {"xy": [950, 234, 974, 283], "panel_size": 275642, "panel_aspectRatio": 3.441696113074205, "category": "Discussion", "figures": 0, "textlen": 0, "fig_size": 0, "title": "Contributions\nUnlike soft attention mechanisms, e.g.[6], retrieve multiple weighted averages,yielding a set of non-local neighbors.Go beyond differentiable k-nearest neighbors classifiers (2, 5], retrieving a set of non-local neighbors instead of non-local averaging of labels.Do not assume fixed set of target neighbors unlike [7].Back-propagating through the non-local layer enables feature learning in the contextof non-local processing[1, 3].", "textRatio": 0.0, "figRatio": 0.0}, "17": {"xy": [954, 542, 972, 1114], "panel_size": 1082808, "panel_aspectRatio": 0.8725314183123878, "category": "Method", "figures": 1, "textlen": 0, "fig_size": 646256, "title": "2. N Block\nNon-local Processing layer based on self-similarity", "18": {"fig_size": 646256, "fig_aspectRatio": 1.4142011834319526, "fig_size_poster": 0.9835390946502057}, "textRatio": 0.0, "figRatio": 0.25238607583813855}, "20": {"xy": [1954, 244, 1394, 642], "panel_size": 894948, "panel_aspectRatio": 2.1713395638629285, "category": "Method", "figures": 3, "textlen": 56, "fig_size": 560160, "title": "Experiments: Faussian Denoising", "22": {"fig_size": 138672, "fig_aspectRatio": 3.02803738317757, "fig_size_poster": 0.4648493543758967}, "23": {"fig_size": 199656, "fig_aspectRatio": 2.5106382978723403, "fig_size_poster": 0.5078909612625538}, "24": {"fig_size": 221832, "fig_aspectRatio": 2.221518987341772, "fig_size_poster": 0.503586800573888}, "textRatio": 0.40875912408759124, "figRatio": 0.21876250934844968}, "26": {"xy": [1953, 917, 1416, 722], "panel_size": 1022352, "panel_aspectRatio": 1.9612188365650969, "category": "Method", "figures": 3, "textlen": 81, "fig_size": 572360, "title": "Experiments: RAW image Denoising", "28": {"fig_size": 159390, "fig_aspectRatio": 3.6142857142857143, "fig_size_poster": 0.5360169491525424}, "29": {"fig_size": 287920, "fig_aspectRatio": 1.2923728813559323, "fig_size_poster": 0.4307909604519774}, "30": {"fig_size": 125050, "fig_aspectRatio": 2.975609756097561, "fig_size_poster": 0.4307909604519774}, "textRatio": 0.5912408759124088, "figRatio": 0.22352704557747546}}}